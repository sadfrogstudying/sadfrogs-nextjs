// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model StudySpot {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    isValidated Boolean  @default(false)

    // general (if people submit a study spot they must fill these out)
    name         String  @unique
    slug         String  @unique
    rating       Float
    wifi         Boolean
    powerOutlets Boolean
    noiseLevel   String
    venueType    String
    images       Image[] // if StudySpot is deleted, all images are deleted (default behavior)

    // location
    placeId   String?
    latitude  Float?
    longitude Float?
    address   String?
    country   String?
    city      String?
    state     String?

    // hours
    openingHours OpeningHours[]

    // etiquette
    canStudyForLong String?

    // ambiance
    vibe        String?
    comfort     String?
    views       String?
    sunlight    Boolean?
    temperature String?
    music       String?
    lighting    String?

    // crowdedness
    distractions String?
    crowdedness  String?

    // surroundings
    naturalSurroundings  String?
    proximityToAmenities String?

    // amenities
    drinks               Boolean?
    food                 Boolean?
    studyBreakFacilities String?
}

model OpeningHours {
    id          Int        @id @default(autoincrement())
    day         Int
    openingTime String
    closingTime String
    StudySpot   StudySpot? @relation(fields: [studySpotId], references: [id], onDelete: Cascade)
    studySpotId Int?       @unique
}

model Image {
    id             Int        @id @default(autoincrement())
    url            String
    dominantColour String     @default("#fff")
    aspectRatio    Float
    height         Int
    width          Int
    studySpot      StudySpot? @relation(fields: [studySpotId], references: [id], onDelete: Cascade)
    studySpotId    Int?

    @@index([studySpotId])
}
